const
  assert = require('assert'),
  sol = require('../solution');

[
  ['Task 1', 'solution1', [
    ["basic", 2, [
      [0, 1, 9, 3],
      [7, 5, 8, 3],
      [9, 2, 9, 4],
      [4, 6, 7, 1],
    ]],
    ["1st adjacent case", 1, [
      [0, 1, 9],
      [3, 2, 3],
      [9, 1, 0],
    ]],
    ["2nd adjacent case", 1, [
      [0, 3, 9],
      [1, 2, 1],
      [9, 3, 0],
    ]],
    ["Vertical matrix", 2, [
      [0, 1, 9],
      [3, 2, 3],
      [9, 1, 0],
      [0, 0, 0],
      [0, 0, 0],
      [3, 2, 3],
      [0, 0, 0],
    ]],
    ["Horizontal matrix", 2, [
      [0, 3, 9, 0, 0, 3, 0],
      [1, 2, 1, 0, 0, 2, 0],
      [9, 3, 0, 0, 0, 3, 0],
    ]],
    ["negative", 1, [
      [-1, -8, -5],
      [-6, -7, -2],
      [-1, -8, -5],
    ]],
    ["negative long", 2, [
      [-1, -1, -1, -8, -5],
      [-7, -5, -6, -7, -2],
      [-1, -1, -1, -8, -5],
    ]],
  ]],
  ['Task 2', 'solution2', [
    ["basic case", 4, [2, 2, 2, 2, 1, 2, -1, 2, 1, 3]],
    ["single value", 0, [-678]],
    ["negative values", 2, [-1, -1, -11, -1]],
    ["ascdending end", 3, [1, 1, 1, 1, 2]],
    ["simple ascdending", 0, [1, 2, 3]],
    ["big data", 16, [
      1588624192, -709816865, -1355773587, -259950863, -731057978,
      1989978657, -1265838748, -1314814715, -1621148367,
      1117116677, -161231890, -1485974497,
      231991957, -1164569772, -605270682,
      818747133, -1726299009, -52409148,
      868590193,
      1488712588, -923198109,
      1464141485,
      954204848, -749179961, -111354136,
      374460232, -67010991, -1644018651, -964106061
    ]],
  ]],
  ['Task 3', 'solution3', [
    ["too long", -1, [1, 1e9]],
    ["empty", -2, []],
  ]],
].map(([task, foo, cases]) => {
  foo = sol[foo]

  foo && describe(task, () =>
    cases.map(([test, expect, data]) => it(test, () => assert.equal(foo(data), expect)))
  );
});
